import { 
  db, 
  auth, 
  signInWithEmailAndPassword, 
  signOut,
  onAuthStateChanged,
  collection,
  doc,
  getDoc,
  setDoc,
  updateDoc,
  addDoc,
  increment
} from './firebase-config.js';

// DOM ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü
const app = document.getElementById('app');
let currentUser = null;

// ‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï UI ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞
function renderHome() {
  app.innerHTML = `
    <header>
      <h1>‡¶≤‡¶æ‡¶ï‡¶ø ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶ó‡ßá‡¶Æ</h1>
      <button id="authBtn">‡¶°‡¶ø‡¶≤‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶®</button>
    </header>
    <main>
      <section id="results">
        <h2>‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü</h2>
        <div id="todayResults">‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</div>
      </section>
      <div id="gamePanel" style="display:none;"></div>
    </main>
  `;
  
  document.getElementById('authBtn').addEventListener('click', handleAuth);
}

// ‡¶≤‡¶ó‡¶á‡¶®/‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
async function handleAuth() {
  if (currentUser) {
    await signOut(auth);
    currentUser = null;
    document.getElementById('authBtn').textContent = '‡¶°‡¶ø‡¶≤‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶®';
    document.getElementById('gamePanel').style.display = 'none';
    alert('‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü ‡¶π‡ßü‡ßá‡¶õ‡ßá');
  } else {
    const email = prompt("‡¶°‡¶ø‡¶≤‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¶‡¶ø‡¶®:");
    const password = prompt("‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶¶‡¶ø‡¶®:");
    
    try {
      const userCredential = await signInWithEmailAndPassword(auth, email, password);
      currentUser = userCredential.user;
      renderGamePanel();
      document.getElementById('authBtn').textContent = '‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü';
      alert("‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡¶´‡¶≤!");
    } catch (error) {
      alert("‡¶≤‡¶ó‡¶á‡¶® ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: " + error.message);
    }
  }
}

// ‡¶ó‡ßá‡¶Æ ‡¶™‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞
async function renderGamePanel() {
  const gamePanel = document.getElementById('gamePanel');
  gamePanel.style.display = 'block';
  
  const adminPanelHTML = await renderAdminPanel();
  
  gamePanel.innerHTML = `
    <div class="game-container">
      <section id="gameSection">
        <h2>‡¶¨‡¶æ‡¶ú‡¶ø ‡¶ß‡¶∞‡ßÅ‡¶®</h2>
        <div class="numberPad"></div>
        <div id="wallet">‡¶ü‡ßã‡¶ï‡ßá‡¶®: 0</div>
        <div id="betHistory"></div>
      </section>
      ${adminPanelHTML}
    </div>
  `;
  
  generateNumberPad();
  setupAdminEventListeners();
}

// ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞
async function renderAdminPanel() {
  if(await isAdmin()) {
    return `
      <section class="admin-panel">
        <h3>üîí ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤</h3>
        <div class="admin-actions">
          <button id="declareResultBtn">‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶ò‡ßã‡¶∑‡¶£‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
          <button id="manageTokensBtn">‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®</button>
          <button id="viewAllBetsBtn">‡¶∏‡¶ï‡¶≤ ‡¶¨‡¶æ‡¶ú‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®</button>
        </div>
      </section>
    `;
  }
  return '';
}

// ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶∏‡ßá‡¶®‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
function setupAdminEventListeners() {
  if(document.getElementById('declareResultBtn')) {
    document.getElementById('declareResultBtn').addEventListener('click', declareResult);
  }
  if(document.getElementById('manageTokensBtn')) {
    document.getElementById('manageTokensBtn').addEventListener('click', manageTokens);
  }
  if(document.getElementById('viewAllBetsBtn')) {
    document.getElementById('viewAllBetsBtn').addEventListener('click', viewAllBets);
  }
}

// ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶ö‡ßá‡¶ï ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function isAdmin() {
  if(!auth.currentUser) return false;
  const adminRef = doc(db, 'admins', auth.currentUser.uid);
  const adminSnap = await getDoc(adminRef);
  return adminSnap.exists();
}

// ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶° ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü
function generateNumberPad() {
  const pad = document.querySelector('.numberPad');
  pad.innerHTML = '';
  
  for (let i = 1; i <= 9; i++) {
    const btn = document.createElement('button');
    btn.className = 'numberBtn';
    btn.textContent = i;
    btn.addEventListener('click', () => placeBet(i));
    pad.appendChild(btn);
  }
}

// ‡¶¨‡¶æ‡¶ú‡¶ø ‡¶ß‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function placeBet(number) {
  const tokens = parseInt(prompt(`‡¶ï‡¶§ ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¨‡¶æ‡¶ú‡¶ø ‡¶ß‡¶∞‡¶¨‡ßá‡¶®? (${number} ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞)`));
  
  if (tokens > 0) {
    try {
      await addDoc(collection(db, 'bets'), {
        userId: currentUser.uid,
        number: number,
        tokens: tokens,
        timestamp: new Date()
      });
      alert(`${number} ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá ${tokens} ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¨‡¶æ‡¶ú‡¶ø ‡¶ß‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá`);
      addToBetHistory(number, tokens);
    } catch (error) {
      alert("‡¶¨‡¶æ‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: " + error.message);
    }
  }
}

// ‡¶¨‡¶æ‡¶ú‡¶ø ‡¶π‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
function addToBetHistory(number, tokens) {
  const history = document.getElementById('betHistory');
  const betEntry = document.createElement('div');
  betEntry.className = 'bet-entry';
  betEntry.innerHTML = `
    <span>${new Date().toLocaleTimeString()}</span>
    <strong>${number} ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞:</strong> ${tokens} ‡¶ü‡ßã‡¶ï‡ßá‡¶®
  `;
  history.appendChild(betEntry);
}

// ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶ò‡ßã‡¶∑‡¶£‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®
async function declareResult() {
  const winningNumber = parseInt(prompt("‡¶ú‡ßü‡ßÄ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® (1-9):"));
  
  if(winningNumber >= 1 && winningNumber <= 9) {
    try {
      await addDoc(collection(db, 'results'), {
        number: winningNumber,
        declaredBy: currentUser.email,
        timestamp: new Date()
      });
      alert(`${winningNumber} ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶ú‡ßü‡ßÄ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ò‡ßã‡¶∑‡¶£‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!`);
    } catch(error) {
      alert("‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: " + error.message);
    }
  }
}

// ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶Æ‡ßá‡¶®‡ßç‡¶ü
async function manageTokens() {
  const userId = prompt("‡¶°‡¶ø‡¶≤‡¶æ‡¶∞ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶¶‡¶ø‡¶®:");
  const amount = parseInt(prompt("‡¶ï‡¶§ ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶Ø‡ßã‡¶ó/‡¶¨‡¶ø‡ßü‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®? (+/-)"));
  
  if(userId && amount) {
    try {
      await updateDoc(doc(db, 'wallets', userId), {
        balance: increment(amount),
        lastUpdated: new Date()
      });
      alert(`${amount} ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!`);
    } catch(error) {
      alert("‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: " + error.message);
    }
  }
}

// ‡¶∏‡¶ï‡¶≤ ‡¶¨‡¶æ‡¶ú‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
async function viewAllBets() {
  try {
    const querySnapshot = await getDocs(collection(db, 'bets'));
    let allBets = "<h4>‡¶∏‡¶ï‡¶≤ ‡¶¨‡¶æ‡¶ú‡¶ø:</h4><ul>";
    
    querySnapshot.forEach((doc) => {
      const bet = doc.data();
      allBets += `<li>${bet.number} ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá ${bet.tokens} ‡¶ü‡ßã‡¶ï‡ßá‡¶® (${new Date(bet.timestamp?.toDate()).toLocaleString()})</li>`;
    });
    
    allBets += "</ul>";
    document.querySelector('.admin-panel').innerHTML += allBets;
  } catch(error) {
    alert("‡¶¨‡¶æ‡¶ú‡¶ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: " + error.message);
  }
}

// ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú
renderHome();

// Auth ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶≤‡¶ø‡¶∏‡ßá‡¶®‡¶æ‡¶∞
onAuthStateChanged(auth, (user) => {
  if (user) {
    currentUser = user;
    renderGamePanel();
    document.getElementById('authBtn').textContent = '‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü';
  }
});
